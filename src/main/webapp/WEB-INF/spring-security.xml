<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="
                http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                http://www.springframework.org/schema/security
                http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <http auto-config="true">
        <!-- Access control -->
        <intercept-url pattern="/" access="ROLE_Admin,ROLE_User,ROLE_Observer" />
        <intercept-url pattern="/index" access="ROLE_Admin,ROLE_User,ROLE_Observer" />
        
        <intercept-url pattern="/app/admin/*" access="ROLE_Admin" />
        <intercept-url pattern="/app/*" access="ROLE_Admin,ROLE_User,ROLE_Observer" />
        
        <form-login login-page="/login" default-target-url="/app/" always-use-default-target="true" authentication-failure-url="/loginfailed" />
        
        <logout invalidate-session="true" logout-success-url="/logout" />
    </http>
    
    <beans:bean id="webexpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

    <authentication-manager>
        <authentication-provider>
            <jdbc-user-service 
                data-source-ref="dataSource"
                users-by-username-query="select login as username, password, 1 - blocked as enabled from users where login = ?" 
                authorities-by-username-query="select u.login as username, CONCAT('ROLE_', ur.roles) as roles from users u, user_roles ur where u.id = ur.User_id and u.login = ?"  
            />
        </authentication-provider>
    </authentication-manager>
 
</beans:beans>